Day 1 Review
------------
The point of the class was to give you a rather complicated introduction to a couple of enterprise technologies.

Dependency Injection
Transactions
Desiging Applications when the framework gives you a lot of constraints
	- object oriented design in Java 
	- VS design in a framework
XML - becomes a core technology for everything

Exam on website is an old exam. Our exam is shorter, or will say "Given 6 questions, choose 4".

Question 1:
Transactions are very important. A problem like Question 1 in the review will be included.

Question 2:
No android. The idea is that you are building an enterprise application (a simple one). You just need to identify what
exists at each layer based upon knowledge of the technology stack we employed this semester. Options exist at each
layer as well (e.g. websockets vs JSF). Will be asked to sort of sketch out the design (i.e. draw out an HTML page,
identify methods for a given class, etc.) of the application stack from client-side to server-side.

Question 3:
Given diagram of an ORM, identify its tables and keys.


Day 2 Review
------------
Theoretical Questions
E.G. Given XML, what does this means
E.G. What are the different isolation levels and what do they mean.

Something Pertaining To Project
E.G. Simple ESB Application (what's on front end, backing beans, ajax, etc.) (just sketch out, no code)


Questions
---------
1) ESB organization?
Entity beans: database model, associations
Service beans: how do you partition logic across these session beans? Up to you. Won't be judged.

2) There will be a design question. Design classes for a situation.

3) No design component to the technology questions.

