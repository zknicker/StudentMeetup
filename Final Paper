Final Paper
Zach Knickerbocker
Dave Holmes
Group 4

The enterprise technologies covered in this class were born from the rise of new challenges in the enterprise environment. The data-saving redundancy of a database access layer, the accelerating efficiency of integrated development environments (IDE) like Eclipse, and the increasing ease of front-end development thanks to technologies like JSF and Twitter Bootstrap each spawn from a specific subset of enterprise needs. As a result, each has made the life of the average developer a less frustrating one, and has as a whole contributed to a healthier enterprise structure for any sensible application to aspire to.

[ORM Layer]

[IDES]

[Front-end]
Among the most consumer relevant and more recent enterprise developments is that of front-end technologies. A common enterprise technology today for orchestrating the rendering of an HTML front-end is that of Java Server Faces (JSF).
JSF, a servlets implementation which provides an XML/HTML-like syntax for constructing elements on a page with a set of templates and components. The technology solves problems associated with server-side HTML rendering, and developing consumer facing environments in a modular and efficient manner. Previously, developers relied on embedded Java in HTML to perform simple tasks like filling a component with data gathered from a program, or looping over a data structure to output content to a page component. JSF enables developers to keep the business logic separate from the front-end presentation of the data - a perk which contributes to the highly modular and layered approach to today's enterprise systems.

In more recent history the pages of the web have grown increasingly stylized. An aspiring enterprise system should thrive to present itself to customers in an appealing way. Previously, developers relied on a significant amount of custom-built CSS and Javascript to provide the highly customized and catered interfaces that customer's have come to expect. This approach gets the job done, but requires a significant amount of expertise not only in the programming side of Javascript and CSS, but in the graphics design that goes in to constructing a masterpiece interface. This problem has been solved by efforts like Twitter Bootstrap which provide a large library of CSS definitions and accompaning Javascript functions to turn in a standard HTML page into a beautiful collection of components that fit together. Twitter Bootstrap enables a developer to apply specific classes to different HTML elements, and use provided arrangements of HTML elements, to construct an interface that looks good and functions well. All of the required CSS classes and arrangements of HTML elements are provided by an accompanying API, and the result is easily customized with further CSS definitions. These conveniences provided by Twitter Bootstrap enable a design-impaired enterprise system to don a look of custom colors, enabling rapid prototyping and simple customization.  In the future, technologies like Twitter Bootstrap can only be expected to continue growing in size and ability. Where interface design is currently the domain of skilled artists, the future may hold an environment dominated by an armada of developers armed with tools to make yesterday's enterprise front-ends shining masterpieces of the finest quality.

The sphere of enterprise computing is defined by the needs of tomorrow's applications. As consumers continue to expect new advancements to aid them in their everyday lives, developers will no doubt continue to evolve the technologies which underly today's enterprise systems. Future developers are unforeseen by the very nature of this cycle, but if there's one thing certain, it's that the future's enterprise systems will be absolute marvels of the world's collective imagination and engineering efforts.